{"version":3,"sources":["utils/tiposDeFundacoes.js","utils/aokiVelloso.js","App.js","index.js"],"names":["nome","quadrada","f1","f2","variacoes","secao","carga","d","a","comprimento","undefined","tabelaKAlpha","k","alpha","useStyles","makeStyles","theme","root","margin","spacing","display","flexDirection","title","marginBottom","formControl","width","geometrico","arranjo","justifyContent","subArranjo","position","height","select","etapa","listaEstacas","maxWidth","backgroundColor","palette","background","default","falha","nested","paddingLeft","alignItems","soloParams","profundidade","slider","max","arranjos","felds","m","n","coords","useStyles1","left","props","lateral","right","top","borderRadius","Secao","classes","className","Fileira","hex","map","index","key","converseLabarre","s","Math","atan","PI","soloInicial","nspt","h","inicio","cargaPonta","areaPonta","cargaLatetal","solo","estaca","hEstaca","u","l","filter","t","reduce","acc","v","i","camadaPonta","App","React","useState","cargaNominal","setCargaNominal","setArranjo","cargaAplicadaCadaEstaca","setCargaAplicadaCadaEstaca","estacas","setEstacas","checked","setChecked","profundidadeEstaca","setProfundidadeEstaca","aoki","setAoki","useEffect","tipos","tiposDeFundacoes","tipo","some","variante","eficiencia","pow","ultimaCamada","cP","cL","pr","pAdm","pAdmCorrigida","cp","cl","Fragment","CssBaseline","Container","Typography","variant","gutterBottom","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","FormControl","clsx","Input","value","onChange","event","Number","target","alert","endAdornment","InputAdornment","FormHelperText","NativeSelect","e","toFixed","List","subheader","ListSubheader","round","estIndex","ListItem","button","ListItemText","primary","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","secondary","disabled","Slider","valueLabelDisplay","getAriaValueText","defaultValue","step","min","onChangeCommitted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e547147.chunk.js","sourcesContent":["// f1 e f2 de acordo com\n// http://www.ufjf.br/nugeo/files/2009/11/GF06-CapCargaProf-por-meio-SPT-2009.pdf\n// pag 4\n\nexport default [\n  {\n    nome: 'Fuste quadrada',\n    quadrada: true,\n    f1: 1.75,\n    f2: 3.50,\n    variacoes: [\n      {\n        secao: 0.15,\n        carga: 150,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [3, 8],\n      },\n      {\n        secao: 0.20,\n        carga: 200,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.25,\n        carga: 300,\n        d: 0.65,\n        a: 0.35,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.30,\n        carga: 400,\n        d: 0.75,\n        a: 0.40,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.35,\n        carga: 500,\n        d: 0.90,\n        a: 0.40,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.40,\n        carga: 700,\n        d: 1.00,\n        a: 0.50,\n        comprimento: [3, 12],\n      },\n    ]\n  },\n  {\n    nome: 'Fuste circular',\n    f1: 1.75,\n    f2: 3.50,\n    variacoes: [\n      {\n        secao: 0.20,\n        carga: 200,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [4, 10],\n      },\n      {\n        secao: 0.25,\n        carga: 300,\n        d: 0.65,\n        a: 0.30,\n        comprimento: [4, 14],\n      },\n      {\n        secao: 0.30,\n        carga: 400,\n        d: 0.75,\n        a: 0.35,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.35,\n        carga: 550,\n        d: 0.90,\n        a: 0.40,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.40,\n        carga: 700,\n        d: 1.00,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.50,\n        carga: 1000,\n        d: 1.30,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.60,\n        carga: 1500,\n        d: 1.50,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n    ]\n  },\n  {\n    nome: 'Strauss',\n    f1: 4.2,\n    f2: 3.8,\n    variacoes: [\n      {\n        secao: 0.25,\n        carga: 200,\n        d: 0.75,\n        a: 0.20,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.32,\n        carga: 300,\n        d: 1.00,\n        a: 0.20,\n        comprimento: [3, 15],\n      },\n      {\n        secao: 0.38,\n        carga: 450,\n        d: 1.20,\n        a: 0.25,\n        comprimento: [3, 20],\n      },\n      {\n        secao: 0.45,\n        carga: 600,\n        d: 1.35,\n        a: 0.30,\n        comprimento: [3, 20],\n      },\n      {\n        secao: 0.55,\n        carga: 800,\n        d: 1.65,\n        a: 0.35,\n        comprimento: [3, 20],\n      },\n    ]\n  },\n  {\n    nome: 'Franki',\n    f1: 2.5,\n    f2: 5.0,\n    variacoes: [\n      {\n        secao: 0.35,\n        carga: 550,\n        d: 1.20,\n        a: 0.70,\n        comprimento: [3, 16],\n      },\n      {\n        secao: 0.40,\n        carga: 750,\n        d: 1.30,\n        a: 0.70,\n        comprimento: [3, 22],\n      },\n      {\n        secao: 0.52,\n        carga: 1300,\n        d: 1.50,\n        a: 0.80,\n        comprimento: undefined,\n      },\n      {\n        secao: 0.60,\n        carga: 1700,\n        d: 1.70,\n        a: 0.80,\n        comprimento: undefined,\n      },\n    ]\n  },\n]\n","//\n// const resistenciaPonta = (k, n) => k * n;\n// const resistenciaLateral = (a, rp) => a * rp;\n// const resistenciaPontaEfetivo = (rp, f1) => rp / f1;\n// const resistenciaLateralEfetivo = (rl, f2) => rl / f2;\n//\n// const capacidadeCarga = (\n//   areaPonta,\n//   resistenciaPontaEfetivo,\n//   areaLateral,\n//   resistenciaLateralEfetivo\n// ) => (\n//   areaPonta * resistenciaPontaEfetivo +\n//   areaLateral * resistenciaLateralEfetivo\n// )\n//\n// export const aokiVeloso = () => {}\n\nexport const tabelaKAlpha = [\n  {\n    nome: 'Areia',\n    k: [10, 6],\n    alpha: [1.4,1.4],\n  },\n  {\n    nome: 'Areia siltosa',\n    k: [8, 5.3],\n    alpha: [2, 1.9],\n  },\n  {\n    nome: 'Areia silto argilosa',\n    k: [7, 5.3],\n    alpha: [2.4, 2.4],\n  },\n  {\n    nome: 'Areia argilosa',\n    k: [6, 5.3],\n    alpha: [3,3],\n  },\n  {\n    nome: 'Areias argilo-siltosa',\n    k: [5, 5.3],\n    alpha: [2.8],\n  },\n  {\n    nome: 'Argila',\n    k: [2, 2.5],\n    alpha: [6,6],\n  },\n  {\n    nome: 'Argila arenosa',\n    k: [3.5, 4.8],\n    alpha: [2.4, 4],\n  },\n  {\n    nome: 'Argila areno-siltosa',\n    k: [3,3],\n    alpha: [2.8, 4.5],\n  },\n  {\n    nome: 'Argila siltosa',\n    k: [2.2, 2.5],\n    alpha: [4, 5.5],\n  },\n  {\n    nome: 'Argila silto-arenosa',\n    k: [3.3, 3],\n    alpha: [3, 5],\n  },\n]\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slider from '@material-ui/core/Slider';\n\n\nimport tiposDeFundacoes from './utils/tiposDeFundacoes';\nimport { tabelaKAlpha } from './utils/aokiVelloso';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4, 0, 4, 0),\n    // padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  title: {\n    marginBottom: theme.spacing(5)\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    width: 200,\n  },\n  geometrico: {\n    flexDirection: 'column'\n  },\n  arranjo: {\n    margin: theme.spacing(2, 0, 0, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  subArranjo: {\n    // display: 'flex',\n    position: 'relative',\n    height: 100,\n    width: '100%'\n  },\n  select: {\n    display: 'flex'\n  },\n  etapa: {\n    margin: theme.spacing(6, 0, 1, 0),\n  },\n  listaEstacas: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.default\n  },\n  falha: {\n    backgroundColor: '#ed4b82'\n  },\n  nested: {\n    paddingLeft: theme.spacing(6),\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  soloParams: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  profundidade: {\n    flexDirection: 'column'\n  },\n  slider: {\n    maxWidth: 240,\n    margin: theme.spacing(4,0,4,0)\n  },\n  max: {\n    margin: theme.spacing(0,0,4,0)\n  }\n}));\n\nconst arranjos = [\n  {\n    //   x       x\n    // x   x   x   x\n    // x   x   x   x\n    //   x       x\n    nome: \"Dupla de hexagonal\",\n    felds: 0.5832,\n    m: 4,\n    n: 2,\n    coords: [\n         [1.5,1],      [3.5,1],\n      [1,2],[2,2],[3,2],[4,2],\n      [1,3],[2,3],[3,3],[4,3],\n         [1.5,4],      [3.5,4],\n    ]\n  },\n  {\n    // x   x   x   x\n    // x   x   x   x\n    // x   x   x   x\n    nome: \"Dupla de seis\",\n    m: 3,\n    n: 4,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n      [1,2],[2,2],[3,2],[4,2],\n      [1,3],[2,3],[3,3],[4,3],\n    ]\n  },\n  {\n    // x   x   x   x\n    // x   x   x   x\n    nome: \"Duplo de quatro\",\n    m: 2,\n    n: 4,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n      [1,2],[2,2],[3,2],[4,2],\n    ]\n  },\n  {\n    // x   x   x   x\n    //   x       x\n    // x   x   x   x\n    // 12 * 4 + 10 * 4 + 9 * 2\n    nome: \"Dupla de cinco\",\n    felds: 0.6625,\n    m: 2,\n    n: 5,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n        [1.5,2],    [3.5,2],\n      [1,3],[2,3],[3,3],[4,3],\n    ]\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  secao: {\n    position: 'absolute',\n    left: props => theme.spacing(props.lateral),\n    right: props => theme.spacing(props.lateral),\n    top: props => theme.spacing(props.top - 1),\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    borderRadius: 100,\n    backgroundColor: 'black',\n  },\n}))\n\nconst Secao = (props) => {\n  const classes = useStyles1(props);\n  return (\n    <div className={classes.secao} />\n  )\n}\n\nconst Fileira = ({hex, arranjo}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.subArranjo}>\n      {arranjo.map((a,index) => (\n        <Secao key={index} top={a[1] * 3} lateral={a[0] * 3}/>\n      ))}\n    </div>\n  )\n};\n\nconst converseLabarre = (d, s, m, n) => (\n  1 - Math.atan(d / s) * 180 / Math.PI * ((n - 1) * m + (m - 1) * n) /\n  (90 * m * n)\n);\n\nconst soloInicial = [\n  {\n    nome: \"Argila siltosa\",\n    nspt: 3,\n    h: 3,\n    inicio: 0,\n    profundidade: 3,\n    k: 0.25,\n    alpha: 5.5\n  },\n  {\n    nome: \"Argila arenosa\",\n    nspt: 9,\n    h: 3,\n    inicio: 3,\n    profundidade: 6,\n    k: 0.48,\n    alpha: 4\n  },\n  {\n    nome: \"Areia argilosa\",\n    nspt: 14,\n    h: 4,\n    inicio: 6,\n    profundidade: 10,\n    k: 0.53,\n    alpha: 3\n  },\n  {\n    nome: \"Areia siltosa\",\n    nspt: 24,\n    h: 5,\n    inicio: 10,\n    profundidade: 15,\n    k: 0.53,\n    alpha: 1.9\n  },\n  {\n    nome: \"Areia siltosa\",\n    nspt: 33,\n    h: 5,\n    inicio: 15,\n    profundidade: 20.05,\n    k: 0.8,\n    alpha: 2\n  },\n]\n\nconst cargaPonta = (areaPonta, k, f1, nspt) => areaPonta * k * nspt / f1;\nconst cargaLatetal = (solo, estaca, hEstaca, f2, quadrada) => {\n  const tabela = solo.map(s => ({\n    ...s,\n    u: quadrada ? estaca.secao * 4 : Math.PI * estaca.secao,\n    l: s.profundidade > hEstaca ? hEstaca - s.inicio : s.h\n  })).filter(t => t.inicio <= hEstaca)\n  const cargaLateral = tabela.reduce((acc, v, i) => {\n    const sum = typeof acc === 'number' ? acc : 0;\n    const carga = sum + v.u * v.l * v.k * v.nspt * v.alpha / (f2 * 100)\n    return carga\n  }, 0);\n  return cargaLateral\n}\nconst camadaPonta = (h, solo) => solo.filter(s => s.inicio <= h && s.profundidade > h);\n\n// function valueLabelFormat(value) {\n//   return marks.findIndex(mark => mark.value === value) + 1;\n// }\n\nfunction App() {\n\n  const classes = useStyles();\n  const [cargaNominal, setCargaNominal] = React.useState((2500 + 155) * 2);\n  const [arranjo, setArranjo] = React.useState(0)\n  const [cargaAplicadaCadaEstaca, setCargaAplicadaCadaEstaca] = React.useState(null);\n  const [estacas, setEstacas] = React.useState(null);\n  const [checked, setChecked] = React.useState(null);\n  const [solo, setSolo] = React.useState(soloInicial);\n  const [profundidadeEstaca, setProfundidadeEstaca] = React.useState(10);\n  const [aoki, setAoki] = React.useState(null);\n\n  const handleChange = event => {\n    const value = Number(event.target.value);\n    if (value >= 0) {\n      setCargaNominal(value);\n    }\n    else alert('Apenas numero!')\n  };\n\n  React.useEffect(() => {\n    const d = arranjos[arranjo].m * arranjos[arranjo].n;\n    setCargaAplicadaCadaEstaca(cargaNominal * (1.1) / d );\n    setChecked(null);\n  }, [cargaNominal, arranjo]);\n\n  React.useEffect(() => {\n    const tipos = tiposDeFundacoes.filter(tipo => (\n      tipo.variacoes.some(v => v.carga >= cargaAplicadaCadaEstaca)\n    )).map(tipo => ({\n      ...tipo,\n      variacoes: tipo.variacoes.filter(variante => (\n        variante.carga >= cargaAplicadaCadaEstaca\n      )).map(v => {\n        const e = !arranjos[arranjo].felds ? {\n          eficiencia: converseLabarre(\n            v.secao,\n            v.d,\n            arranjos[arranjo].m,\n            arranjos[arranjo].n\n          )\n        } : {}\n        return {\n          ...v,\n          ...e\n        }\n      })\n    }))\n    setEstacas(tipos);\n    setChecked(null);\n  }, [cargaAplicadaCadaEstaca, arranjo]);\n\n  const handleChecked = (estacaIndex, secaoIndex) => {\n    setChecked([estacaIndex, secaoIndex])\n  }\n\n  React.useEffect(() => {\n    if (checked) {\n      const areaPonta = estacas[checked[0]].nome === 'Franki'\n      ? 0.38\n      : estacas[checked[0]].quadrada\n        ? Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2)\n        : Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2) * 3.14592654\n      const ultimaCamada = camadaPonta(profundidadeEstaca, solo)[0];\n      const cP = cargaPonta(areaPonta, ultimaCamada.k, estacas[checked[0]].f1, ultimaCamada.nspt);\n      const cL = cargaLatetal(solo, estacas[checked[0]].variacoes[checked[1]], profundidadeEstaca, estacas[checked[0]].f2, estacas[checked[0]].quadrada);\n      const pr = cP + cL;\n      const pAdm = pr / 2 * 1000\n      const pAdmCorrigida = arranjos[arranjo].felds\n      ? pAdm * arranjos[arranjo].felds\n      : estacas[checked[0]].variacoes[checked[1]].eficiencia * pAdm;\n      setAoki({\n        cp: cP * 1000,\n        cl: cL * 1000,\n        pr: pr * 1000,\n        pAdm,\n        pAdmCorrigida\n      })\n    }\n  }, [checked, solo, profundidadeEstaca])\n\n  const onChangeCommitted = (event, value) => {\n    setProfundidadeEstaca(value);\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <div className={classes.root}>\n          <Typography variant='h4' gutterBottom className={classes.title}>\n            Projeto 2 de fundações\n          </Typography>\n          {/*<ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                1: Definir numero de pilares.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <Input disabled value={2} />\n                <FormHelperText>Número de pilares</FormHelperText>\n              </FormControl>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>*/}\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                1: Definir a carga.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <Input\n                  value={cargaNominal}\n                  onChange={handleChange}\n                  endAdornment={<InputAdornment position=\"end\">kN</InputAdornment>}\n                />\n                <FormHelperText>Carga de cada pilar</FormHelperText>\n              </FormControl>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                2: Definir o arranjo geométrico.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.geometrico}>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <NativeSelect\n                  value={arranjo}\n                  onChange={(e) => setArranjo(Number(e.target.value))}\n                >\n                {arranjos.map((a, i) => (\n                  <option value={i} key={a.nome}>{a.nome}</option>\n                ))}\n                </NativeSelect>\n                <FormHelperText>Arranjo geometrico</FormHelperText>\n              </FormControl>\n              <div className={classes.arranjo}>\n                <Fileira arranjo={arranjos[arranjo].coords}/>\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                3: Calcular a carga aplicada em cada estaca.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography variant='body1'>\n                Carga aplicada em cada estaca:\n                {\n                  cargaAplicadaCadaEstaca\n                  ? ` ${cargaAplicadaCadaEstaca.toFixed(2)} kN`\n                  : ' loading...'\n                }\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                4: Filtrar entre os tipos de estacas, as que suportam a carga\n                aplicada em cada pilar e selecionar a desejada.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div/>\n              {estacas && (\n                <List\n                  className={classes.listaEstacas}\n                  subheader={\n                  <ListSubheader>\n                    Estacas aceitaveis\n                    {arranjos[arranjo].felds ? ` - Eficiência (Felds) ${Math.round(arranjos[arranjo].felds * 10000)/100} %` : ''}\n                  </ListSubheader>\n                }>\n                  {estacas.map((estaca, estIndex) => (\n                    <React.Fragment key={estaca.nome}>\n                      <ListItem button key={estaca.nome}>\n                        <ListItemText\n                          primary={estaca.nome}\n                        />\n                      </ListItem>\n                      {estaca.variacoes.map((v, index) => (\n                        <ListItem\n                          button\n                          key={v.secao}\n                          className={classes.nested}\n                          onClick={() => handleChecked(estIndex, index)}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              edge=\"start\"\n                              checked={checked ? estIndex === checked[0] && index === checked[1] : false}\n                              tabIndex={-1}\n                              disableRipple\n                            />\n                          </ListItemIcon>\n                          <ListItemText primary={`Secao ${v.secao} m`}/>\n                          <ListItemText secondary={`Carga maxima ${v.carga} kN`}/>\n                          <ListItemText secondary={`Distância mínima ${v.d} m`}/>\n                          {v.eficiencia ? <ListItemText secondary={`Eficiência (Labarre) ${Math.round(v.eficiencia * 10000)/100} %`}/> : null}\n                        </ListItem>\n                      ))}\n                    </React.Fragment>\n                  ))}\n                </List>\n              )}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                5: Definir os parametros K e alpha.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <List\n                className={classes.listaEstacas}\n                subheader={\n                <ListSubheader>\n                  Parametros do solo\n                </ListSubheader>\n              }>\n                {solo.map((s, i) => (\n                  <React.Fragment key={i}>\n                    <ListItem\n                      button\n                      key={i}\n                    >\n                      <ListItemText\n                        primary={`Camada ${i + 1}`}\n                      />\n                    </ListItem>\n                    <ListItem className={classes.nested}>\n                      <NativeSelect\n                        value={s.nome}\n                        // onChange={(e) => setArranjo(Number(e.target.value))}\n                      >\n                      {tabelaKAlpha.map((a, i) => (\n                        <option disabled value={a.nome} key={i}>{a.nome}</option>\n                      ))}\n                      </NativeSelect>\n                      <ListItemText\n                        secondary={`nspt = ${s.nspt}`}\n                      />\n                      <ListItemText\n                        secondary={`h = ${s.h} m`}\n                      />\n                      <ListItemText\n                        secondary={`k = ${s.k} MPa`}\n                      />\n                      <ListItemText\n                        secondary={`alpha = ${s.alpha} %`}\n                      />\n                    </ListItem>\n                  </React.Fragment>\n                ))}\n              </List>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                6: Definir a área da ponta\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography variant='body1'>\n                {\n                  !checked\n                  ? <span>Escolha uma estaca na estapa 4</span>\n                  : estacas[checked[0]].nome === 'Franki'\n                    ? <span>0.38 m² (bulbo de 180 l)</span>\n                    : estacas[checked[0]].quadrada\n                      ? `${Math.round(Math.pow(estacas[checked[0]].variacoes[checked[1]].secao, 2) * 10000) / 10000} m²`\n                      : `${Math.round(Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2) * 3.14592654 * 10000) / 10000} m²`\n                }\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                7: Definir a profundidade\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.profundidade}>\n              <Slider\n                valueLabelDisplay=\"on\"\n                getAriaValueText={\n                  function valuetext(value) {\n                    return `${value} m`;\n                  }}\n                className={classes.slider}\n                defaultValue={profundidadeEstaca}\n                step={0.05}\n                min={5}\n                max={20}\n                onChangeCommitted={onChangeCommitted}\n              />\n              { aoki && (\n                <Typography variant='body1' className={classes.max}>\n                  Carga máxima suportada por cada estaca: {Math.round(cargaAplicadaCadaEstaca, 2)} kN\n                </Typography>\n              )}\n              {\n                aoki ?\n                  <List\n                    className={\n                      clsx(classes.listaEstacas, {\n                        [classes.falha]: cargaAplicadaCadaEstaca > aoki.pAdmCorrigida\n                      })}\n                    subheader={\n                    <ListSubheader>\n                      Resultados\n                    </ListSubheader>\n                  }>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga na ponta ${Math.round(aoki.cp,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga lateral ${Math.round(aoki.cl,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`capacidade de carga ${Math.round(aoki.pr,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga admissivel ${Math.round(aoki.pAdm,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga admissivel corrigida ${Math.round(aoki.pAdmCorrigida,2)} kN`}\n                      />\n                    </ListItem>\n                  </List>\n                : <Typography variant='body1'>Escolha uma estaca na etapa 4</Typography>\n              }\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n\n\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}