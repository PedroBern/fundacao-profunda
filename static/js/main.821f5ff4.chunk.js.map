{"version":3,"sources":["utils/tiposDeFundacoes.js","utils/aokiVelloso.js","App.js","index.js"],"names":["nome","quadrada","f1","f2","variacoes","secao","carga","d","a","comprimento","tabelaKAlpha","k","alpha","useStyles","makeStyles","theme","root","margin","spacing","display","flexDirection","title","marginBottom","formControl","width","geometrico","comparativo","height","marginLeft","arranjo","justifyContent","subArranjo","position","select","etapa","listaEstacas","maxWidth","backgroundColor","palette","background","default","falha","nested","paddingLeft","alignItems","soloParams","profundidade","slider","max","arranjos","felds","m","n","coords","useStyles1","left","props","lateral","right","top","borderRadius","Secao","classes","className","Fileira","hex","map","index","key","converseLabarre","s","Math","atan","PI","soloInicial","nspt","h","inicio","cargaPonta","areaPonta","cargaLatetal","solo","estaca","hEstaca","u","l","filter","t","reduce","acc","v","i","camadaPonta","comparacao","cargaNominal","nEstacas","cargaAplicadaCadaEstaca","tiposDeFundacoes","tipo","some","variante","eficiencia","metodoEfeitoGrupo","pow","distancia","bounds","res","ultimaCamada","pAdmCorrigida","verify","cP","cL","pr","pAdm","cp","cl","push","id","App","React","useState","setCargaNominal","setArranjo","setCargaAplicadaCadaEstaca","estacas","setEstacas","checked","setChecked","profundidadeEstaca","setProfundidadeEstaca","aoki","setAoki","setComparativo","useEffect","c","sort","b","tipos","Fragment","CssBaseline","Container","Typography","variant","gutterBottom","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","FormControl","clsx","Input","value","onChange","event","Number","target","alert","endAdornment","InputAdornment","FormHelperText","NativeSelect","e","toFixed","List","subheader","ListSubheader","round","estIndex","ListItem","button","ListItemText","primary","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","secondary","disabled","Slider","valueLabelDisplay","getAriaValueText","defaultValue","step","min","onChangeCommitted","data","formatter","name","labelFormatter","dataKey","fill","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.821f5ff4.chunk.js","sourcesContent":["// f1 e f2 de acordo com\n// http://www.ufjf.br/nugeo/files/2009/11/GF06-CapCargaProf-por-meio-SPT-2009.pdf\n// pag 4\n\nexport default [\n  {\n    nome: 'Fuste quadrada',\n    quadrada: true,\n    f1: 1.75,\n    f2: 3.50,\n    variacoes: [\n      {\n        secao: 0.15,\n        carga: 150,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [3, 8],\n      },\n      {\n        secao: 0.20,\n        carga: 200,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.25,\n        carga: 300,\n        d: 0.65,\n        a: 0.35,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.30,\n        carga: 400,\n        d: 0.75,\n        a: 0.40,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.35,\n        carga: 500,\n        d: 0.90,\n        a: 0.40,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.40,\n        carga: 700,\n        d: 1.00,\n        a: 0.50,\n        comprimento: [3, 12],\n      },\n    ]\n  },\n  {\n    nome: 'Fuste circular',\n    f1: 1.75,\n    f2: 3.50,\n    variacoes: [\n      {\n        secao: 0.20,\n        carga: 200,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [4, 10],\n      },\n      {\n        secao: 0.25,\n        carga: 300,\n        d: 0.65,\n        a: 0.30,\n        comprimento: [4, 14],\n      },\n      {\n        secao: 0.30,\n        carga: 400,\n        d: 0.75,\n        a: 0.35,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.35,\n        carga: 550,\n        d: 0.90,\n        a: 0.40,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.40,\n        carga: 700,\n        d: 1.00,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.50,\n        carga: 1000,\n        d: 1.30,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.60,\n        carga: 1500,\n        d: 1.50,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n    ]\n  },\n  {\n    nome: 'Strauss',\n    f1: 4.2,\n    f2: 3.8,\n    variacoes: [\n      {\n        secao: 0.25,\n        carga: 200,\n        d: 0.75,\n        a: 0.20,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.32,\n        carga: 300,\n        d: 1.00,\n        a: 0.20,\n        comprimento: [3, 15],\n      },\n      {\n        secao: 0.38,\n        carga: 450,\n        d: 1.20,\n        a: 0.25,\n        comprimento: [3, 20],\n      },\n      {\n        secao: 0.45,\n        carga: 600,\n        d: 1.35,\n        a: 0.30,\n        comprimento: [3, 20],\n      },\n      {\n        secao: 0.55,\n        carga: 800,\n        d: 1.65,\n        a: 0.35,\n        comprimento: [3, 20],\n      },\n    ]\n  },\n  // {\n  //   nome: 'Franki',\n  //   f1: 2.5,\n  //   f2: 5.0,\n  //   variacoes: [\n  //     {\n  //       secao: 0.35,\n  //       carga: 550,\n  //       d: 1.20,\n  //       a: 0.70,\n  //       comprimento: [3, 16],\n  //     },\n  //     {\n  //       secao: 0.40,\n  //       carga: 750,\n  //       d: 1.30,\n  //       a: 0.70,\n  //       comprimento: [3, 22],\n  //     },\n  //     {\n  //       secao: 0.52,\n  //       carga: 1300,\n  //       d: 1.50,\n  //       a: 0.80,\n  //       comprimento: undefined,\n  //     },\n  //     {\n  //       secao: 0.60,\n  //       carga: 1700,\n  //       d: 1.70,\n  //       a: 0.80,\n  //       comprimento: undefined,\n  //     },\n  //   ]\n  // },\n]\n","//\n// const resistenciaPonta = (k, n) => k * n;\n// const resistenciaLateral = (a, rp) => a * rp;\n// const resistenciaPontaEfetivo = (rp, f1) => rp / f1;\n// const resistenciaLateralEfetivo = (rl, f2) => rl / f2;\n//\n// const capacidadeCarga = (\n//   areaPonta,\n//   resistenciaPontaEfetivo,\n//   areaLateral,\n//   resistenciaLateralEfetivo\n// ) => (\n//   areaPonta * resistenciaPontaEfetivo +\n//   areaLateral * resistenciaLateralEfetivo\n// )\n//\n// export const aokiVeloso = () => {}\n\nexport const tabelaKAlpha = [\n  {\n    nome: 'Areia',\n    k: [10, 6],\n    alpha: [1.4,1.4],\n  },\n  {\n    nome: 'Areia siltosa',\n    k: [8, 5.3],\n    alpha: [2, 1.9],\n  },\n  {\n    nome: 'Areia silto argilosa',\n    k: [7, 5.3],\n    alpha: [2.4, 2.4],\n  },\n  {\n    nome: 'Areia argilosa',\n    k: [6, 5.3],\n    alpha: [3,3],\n  },\n  {\n    nome: 'Areias argilo-siltosa',\n    k: [5, 5.3],\n    alpha: [2.8],\n  },\n  {\n    nome: 'Argila',\n    k: [2, 2.5],\n    alpha: [6,6],\n  },\n  {\n    nome: 'Argila arenosa',\n    k: [3.5, 4.8],\n    alpha: [2.4, 4],\n  },\n  {\n    nome: 'Argila areno-siltosa',\n    k: [3,3],\n    alpha: [2.8, 4.5],\n  },\n  {\n    nome: 'Argila siltosa',\n    k: [2.2, 2.5],\n    alpha: [4, 5.5],\n  },\n  {\n    nome: 'Argila silto-arenosa',\n    k: [3.3, 3],\n    alpha: [3, 5],\n  },\n]\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slider from '@material-ui/core/Slider';\nimport { BarChart, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from 'recharts';\n\nimport tiposDeFundacoes from './utils/tiposDeFundacoes';\nimport { tabelaKAlpha } from './utils/aokiVelloso';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4, 0, 4, 0),\n    // padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  title: {\n    marginBottom: theme.spacing(5)\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    width: 200,\n  },\n  geometrico: {\n    flexDirection: 'column'\n  },\n  comparativo: {\n    height: 400,\n    width: '100%',\n    '& $div.recharts-responsive-container': {\n      marginLeft: -25\n    }\n  },\n  arranjo: {\n    margin: theme.spacing(2, 0, 0, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  subArranjo: {\n    // display: 'flex',\n    position: 'relative',\n    height: 100,\n    width: '100%'\n  },\n  select: {\n    display: 'flex'\n  },\n  etapa: {\n    margin: theme.spacing(6, 0, 1, 0),\n  },\n  listaEstacas: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.default\n  },\n  falha: {\n    backgroundColor: '#ed4b82'\n  },\n  nested: {\n    paddingLeft: theme.spacing(6),\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  soloParams: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  profundidade: {\n    flexDirection: 'column'\n  },\n  slider: {\n    maxWidth: 240,\n    margin: theme.spacing(4,0,4,0)\n  },\n  max: {\n    margin: theme.spacing(0,0,4,0)\n  }\n}));\n\nconst arranjos = [\n  {\n    //   x       x\n    // x   x   x   x\n    // x   x   x   x\n    //   x       x\n    nome: \"Dupla de hexagonal\",\n    felds: 0.5832,\n    m: 4,\n    n: 2,\n    coords: [\n         [1.5,1],      [3.5,1],\n      [1,2],[2,2],[3,2],[4,2],\n      [1,3],[2,3],[3,3],[4,3],\n         [1.5,4],      [3.5,4],\n    ]\n  },\n  {\n    // x   x   x   x\n    // x   x   x   x\n    // x   x   x   x\n    nome: \"Dupla de seis\",\n    m: 3,\n    n: 4,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n      [1,2],[2,2],[3,2],[4,2],\n      [1,3],[2,3],[3,3],[4,3],\n    ]\n  },\n  {\n    // x   x   x   x\n    // x   x   x   x\n    nome: \"Duplo de quatro\",\n    m: 2,\n    n: 4,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n      [1,2],[2,2],[3,2],[4,2],\n    ]\n  },\n  {\n    // x   x   x   x\n    //   x       x\n    // x   x   x   x\n    // 12 * 4 + 10 * 4 + 9 * 2\n    nome: \"Dupla de cinco\",\n    felds: 0.6625,\n    m: 2,\n    n: 5,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n        [1.5,2],    [3.5,2],\n      [1,3],[2,3],[3,3],[4,3],\n    ]\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  secao: {\n    position: 'absolute',\n    left: props => theme.spacing(props.lateral),\n    right: props => theme.spacing(props.lateral),\n    top: props => theme.spacing(props.top - 1),\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    borderRadius: 100,\n    backgroundColor: 'black',\n  },\n}))\n\nconst Secao = (props) => {\n  const classes = useStyles1(props);\n  return (\n    <div className={classes.secao} />\n  )\n}\n\nconst Fileira = ({hex, arranjo}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.subArranjo}>\n      {arranjo.map((a,index) => (\n        <Secao key={index} top={a[1] * 3} lateral={a[0] * 3}/>\n      ))}\n    </div>\n  )\n};\n\nconst converseLabarre = (d, s, m, n) => (\n  1 - Math.atan(d / s) * 180 / Math.PI * ((n - 1) * m + (m - 1) * n) /\n  (90 * m * n)\n);\n\nconst soloInicial = [\n  {\n    nome: \"Argila siltosa\",\n    nspt: 3,\n    h: 3,\n    inicio: 0,\n    profundidade: 3,\n    k: 0.25,\n    alpha: 5.5\n  },\n  {\n    nome: \"Argila arenosa\",\n    nspt: 9,\n    h: 3,\n    inicio: 3,\n    profundidade: 6,\n    k: 0.48,\n    alpha: 4\n  },\n  {\n    nome: \"Areia argilosa\",\n    nspt: 14,\n    h: 4,\n    inicio: 6,\n    profundidade: 10,\n    k: 0.53,\n    alpha: 3\n  },\n  {\n    nome: \"Areia siltosa\",\n    nspt: 24,\n    h: 5,\n    inicio: 10,\n    profundidade: 15,\n    k: 0.53,\n    alpha: 1.9\n  },\n  {\n    nome: \"Areia siltosa\",\n    nspt: 33,\n    h: 5,\n    inicio: 15,\n    profundidade: 20.05,\n    k: 0.8,\n    alpha: 2\n  },\n]\n\nconst cargaPonta = (areaPonta, k, f1, nspt) => areaPonta * k * nspt / f1;\nconst cargaLatetal = (solo, estaca, hEstaca, f2, quadrada) => {\n  const tabela = solo.map(s => ({\n    ...s,\n    u: quadrada ? estaca.secao * 4 : Math.PI * estaca.secao,\n    l: s.profundidade > hEstaca ? hEstaca - s.inicio : s.h\n  })).filter(t => t.inicio <= hEstaca)\n  const cargaLateral = tabela.reduce((acc, v, i) => {\n    const sum = typeof acc === 'number' ? acc : 0;\n    const carga = sum + v.u * v.l * v.k * v.nspt * v.alpha / (f2 * 100)\n    return carga\n  }, 0);\n  return cargaLateral\n}\nconst camadaPonta = (h, solo) => solo.filter(s => s.inicio <= h && s.profundidade > h);\n\n// function valueLabelFormat(value) {\n//   return marks.findIndex(mark => mark.value === value) + 1;\n// }\n\nconst comparacao = (cargaNominal) => {\n  let comparacao = [];\n  arranjos.map(arranjo => {\n    const nEstacas = arranjo.m * arranjo.n;\n    const cargaAplicadaCadaEstaca = cargaNominal * 1.10 / nEstacas;\n    const tipos = tiposDeFundacoes.filter(tipo => (\n      tipo.variacoes.some(v => v.carga >= cargaAplicadaCadaEstaca)\n    )).map(tipo => ({\n      ...tipo,\n      variacoes: tipo.variacoes.filter(variante => (\n        variante.carga >= cargaAplicadaCadaEstaca\n      )).map(v => {\n        const e = !arranjo.felds ? {\n          eficiencia: converseLabarre(\n            v.secao,\n            v.d,\n            arranjo.m,\n            arranjo.n\n          ),\n          metodoEfeitoGrupo: 'labarre'\n        } : {\n          eficiencia: arranjo.felds,\n          metodoEfeitoGrupo: 'felds'\n        }\n        return {\n          ...v,\n          ...e\n        }\n      })\n    }))\n\n    tipos.map(tipo => {\n\n      tipo.variacoes.map(v => {\n        const areaPonta = tipo.nome === 'Franki'\n        ? 0.38\n        : tipo.quadrada\n          ? Math.pow(v.secao / 2, 2)\n          : Math.pow(v.secao / 2, 2) * 3.14592654;\n\n        let distancia = 24;\n        let bounds = [4, 30]\n        let res = {};\n        let h;\n\n        function verify(h){\n          const ultimaCamada = camadaPonta(h, soloInicial)[0];\n          const cP = cargaPonta(areaPonta, ultimaCamada.k, tipo.f1, ultimaCamada.nspt);\n          const cL = cargaLatetal(soloInicial, v, h, tipo.f2, tipo.quadrada);\n          const pr = cP + cL;\n          const pAdm = pr / 2 * 1000\n          const pAdmCorrigida = pAdm * v.eficiencia\n          return cargaAplicadaCadaEstaca <= pAdmCorrigida;\n        }\n\n        const ok = verify(20);\n\n        if (!ok) return\n\n        while (distancia > 0.05) {\n          h = (bounds[0] + bounds[1]) / 2;\n\n          const ultimaCamada = camadaPonta(h, soloInicial)[0];\n          const cP = cargaPonta(areaPonta, ultimaCamada.k, tipo.f1, ultimaCamada.nspt);\n          const cL = cargaLatetal(soloInicial, v, h, tipo.f2, tipo.quadrada);\n          const pr = cP + cL;\n          const pAdm = pr / 2 * 1000\n          const pAdmCorrigida = pAdm * v.eficiencia\n          res = {\n            cp: cP * 1000,\n            cl: cL * 1000,\n            pr: pr * 1000,\n            pAdm,\n            pAdmCorrigida\n          }\n\n          if (res.pAdmCorrigida >= cargaAplicadaCadaEstaca) {\n            bounds[1] = h;\n          }\n          else {\n            bounds[0] = h;\n          }\n          distancia = bounds[1] - bounds[0];\n        }\n\n        comparacao.push({\n          id: `${arranjo.nome} - ${tipo.nome} - ${v.secao}`,\n          profundidade: h,\n          nome: tipo.nome,\n          secao: v.secao,\n          arranjo: arranjo.nome,\n          ...res,\n        })\n      })\n\n    })\n\n  })\n  return comparacao;\n};\n\nfunction App() {\n\n  const classes = useStyles();\n  const [cargaNominal, setCargaNominal] = React.useState((2500 + 155) * 2);\n  const [arranjo, setArranjo] = React.useState(0)\n  const [cargaAplicadaCadaEstaca, setCargaAplicadaCadaEstaca] = React.useState(null);\n  const [estacas, setEstacas] = React.useState(null);\n  const [checked, setChecked] = React.useState(null);\n  const [solo, setSolo] = React.useState(soloInicial);\n  const [profundidadeEstaca, setProfundidadeEstaca] = React.useState(10);\n  const [aoki, setAoki] = React.useState(null);\n  const [comparativo, setComparativo] = React.useState(null);\n\n  const handleChange = event => {\n    const value = Number(event.target.value);\n    if (value >= 0) {\n      setCargaNominal(value);\n    }\n    else alert('Apenas numero!')\n  };\n\n  React.useEffect(() => {\n    const d = arranjos[arranjo].m * arranjos[arranjo].n;\n    setCargaAplicadaCadaEstaca(cargaNominal * (1.1) / d );\n    setChecked(null);\n  }, [cargaNominal, arranjo]);\n\n  React.useEffect(() => {\n    const c = comparacao(cargaNominal)\n    setComparativo(\n      c.sort(function (a, b) {\n        if (a.profundidade > b.profundidade) {\n          return 1;\n        }\n        if (a.profundidade < b.profundidade) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      })\n    );\n  }, [cargaNominal]);\n\n  React.useEffect(() => {\n    const tipos = tiposDeFundacoes.filter(tipo => (\n      tipo.variacoes.some(v => v.carga >= cargaAplicadaCadaEstaca)\n    )).map(tipo => ({\n      ...tipo,\n      variacoes: tipo.variacoes.filter(variante => (\n        variante.carga >= cargaAplicadaCadaEstaca\n      )).map(v => {\n        const e = !arranjos[arranjo].felds ? {\n          eficiencia: converseLabarre(\n            v.secao,\n            v.d,\n            arranjos[arranjo].m,\n            arranjos[arranjo].n\n          )\n        } : {}\n        return {\n          ...v,\n          ...e\n        }\n      })\n    }))\n    setEstacas(tipos);\n    setChecked(null);\n  }, [cargaAplicadaCadaEstaca, arranjo]);\n\n  const handleChecked = (estacaIndex, secaoIndex) => {\n    setChecked([estacaIndex, secaoIndex])\n  }\n\n  React.useEffect(() => {\n    if (checked) {\n      const areaPonta = estacas[checked[0]].nome === 'Franki'\n      ? 0.38\n      : estacas[checked[0]].quadrada\n        ? Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2)\n        : Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2) * 3.14592654\n      const ultimaCamada = camadaPonta(profundidadeEstaca, solo)[0];\n      const cP = cargaPonta(areaPonta, ultimaCamada.k, estacas[checked[0]].f1, ultimaCamada.nspt);\n      const cL = cargaLatetal(solo, estacas[checked[0]].variacoes[checked[1]], profundidadeEstaca, estacas[checked[0]].f2, estacas[checked[0]].quadrada);\n      const pr = cP + cL;\n      const pAdm = pr / 2 * 1000\n      const pAdmCorrigida = arranjos[arranjo].felds\n      ? pAdm * arranjos[arranjo].felds\n      : estacas[checked[0]].variacoes[checked[1]].eficiencia * pAdm;\n      setAoki({\n        cp: cP * 1000,\n        cl: cL * 1000,\n        pr: pr * 1000,\n        pAdm,\n        pAdmCorrigida\n      })\n    }\n  }, [checked, solo, profundidadeEstaca])\n\n  const onChangeCommitted = (event, value) => {\n    setProfundidadeEstaca(value);\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <div className={classes.root}>\n          <Typography variant='h4' gutterBottom className={classes.title}>\n            Projeto 2 de fundações\n          </Typography>\n          {/*<ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                1: Definir numero de pilares.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <Input disabled value={2} />\n                <FormHelperText>Número de pilares</FormHelperText>\n              </FormControl>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>*/}\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                1: Definir a carga.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <Input\n                  value={cargaNominal}\n                  onChange={handleChange}\n                  endAdornment={<InputAdornment position=\"end\">kN</InputAdornment>}\n                />\n                <FormHelperText>Carga total</FormHelperText>\n              </FormControl>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                2: Definir o arranjo geométrico.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.geometrico}>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <NativeSelect\n                  value={arranjo}\n                  onChange={(e) => setArranjo(Number(e.target.value))}\n                >\n                {arranjos.map((a, i) => (\n                  <option value={i} key={a.nome}>{a.nome}</option>\n                ))}\n                </NativeSelect>\n                <FormHelperText>Arranjo geometrico</FormHelperText>\n              </FormControl>\n              <div className={classes.arranjo}>\n                <Fileira arranjo={arranjos[arranjo].coords}/>\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                3: Calcular a carga aplicada em cada estaca.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography variant='body1'>\n                Carga aplicada em cada estaca:\n                {\n                  cargaAplicadaCadaEstaca\n                  ? ` ${cargaAplicadaCadaEstaca.toFixed(2)} kN`\n                  : ' loading...'\n                }\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                4: Filtrar entre os tipos de estacas, as que suportam a carga\n                aplicada em cada pilar e selecionar a desejada.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div/>\n              {estacas && (\n                <List\n                  className={classes.listaEstacas}\n                  subheader={\n                  <ListSubheader>\n                    Estacas aceitaveis\n                    {arranjos[arranjo].felds ? ` - Eficiência (Felds) ${Math.round(arranjos[arranjo].felds * 10000)/100} %` : ''}\n                  </ListSubheader>\n                }>\n                  {estacas.map((estaca, estIndex) => (\n                    <React.Fragment key={estaca.nome}>\n                      <ListItem button key={estaca.nome}>\n                        <ListItemText\n                          primary={estaca.nome}\n                        />\n                      </ListItem>\n                      {estaca.variacoes.map((v, index) => (\n                        <ListItem\n                          button\n                          key={v.secao}\n                          className={classes.nested}\n                          onClick={() => handleChecked(estIndex, index)}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              edge=\"start\"\n                              checked={checked ? estIndex === checked[0] && index === checked[1] : false}\n                              tabIndex={-1}\n                              disableRipple\n                            />\n                          </ListItemIcon>\n                          <ListItemText primary={`Secao ${v.secao} m`}/>\n                          <ListItemText secondary={`Carga maxima ${v.carga} kN`}/>\n                          <ListItemText secondary={`Distância mínima ${v.d} m`}/>\n                          {v.eficiencia ? <ListItemText secondary={`Eficiência (Labarre) ${Math.round(v.eficiencia * 10000)/100} %`}/> : null}\n                        </ListItem>\n                      ))}\n                    </React.Fragment>\n                  ))}\n                </List>\n              )}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                5: Definir os parametros K e alpha.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <List\n                className={classes.listaEstacas}\n                subheader={\n                <ListSubheader>\n                  Parametros do solo\n                </ListSubheader>\n              }>\n                {solo.map((s, i) => (\n                  <React.Fragment key={i}>\n                    <ListItem\n                      button\n                      key={i}\n                    >\n                      <ListItemText\n                        primary={`Camada ${i + 1}`}\n                      />\n                    </ListItem>\n                    <ListItem className={classes.nested}>\n                      <NativeSelect\n                        value={s.nome}\n                        // onChange={(e) => setArranjo(Number(e.target.value))}\n                      >\n                      {tabelaKAlpha.map((a, i) => (\n                        <option disabled value={a.nome} key={i}>{a.nome}</option>\n                      ))}\n                      </NativeSelect>\n                      <ListItemText\n                        secondary={`nspt = ${s.nspt}`}\n                      />\n                      <ListItemText\n                        secondary={`h = ${s.h} m`}\n                      />\n                      <ListItemText\n                        secondary={`k = ${s.k} MPa`}\n                      />\n                      <ListItemText\n                        secondary={`alpha = ${s.alpha} %`}\n                      />\n                    </ListItem>\n                  </React.Fragment>\n                ))}\n              </List>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                6: Definir a área da ponta\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography variant='body1'>\n                {\n                  !checked\n                  ? <span>Escolha uma estaca na estapa 4</span>\n                  : estacas[checked[0]].nome === 'Franki'\n                    ? <span>0.38 m² (bulbo de 180 l)</span>\n                    : estacas[checked[0]].quadrada\n                      ? `${Math.round(Math.pow(estacas[checked[0]].variacoes[checked[1]].secao, 2) * 10000) / 10000} m²`\n                      : `${Math.round(Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2) * 3.14592654 * 10000) / 10000} m²`\n                }\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                7: Definir a profundidade\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.profundidade}>\n              <Slider\n                valueLabelDisplay=\"on\"\n                getAriaValueText={\n                  function valuetext(value) {\n                    return `${value} m`;\n                  }}\n                className={classes.slider}\n                defaultValue={profundidadeEstaca}\n                step={0.05}\n                min={4}\n                max={20}\n                onChangeCommitted={onChangeCommitted}\n              />\n              { aoki && (\n                <Typography variant='body1' className={classes.max}>\n                  Carga máxima suportada por cada estaca: {Math.round(cargaAplicadaCadaEstaca, 2)} kN\n                </Typography>\n              )}\n              {\n                aoki ?\n                  <List\n                    className={\n                      clsx(classes.listaEstacas, {\n                        [classes.falha]: cargaAplicadaCadaEstaca > aoki.pAdmCorrigida\n                      })}\n                    subheader={\n                    <ListSubheader>\n                      Resultados\n                    </ListSubheader>\n                  }>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga na ponta ${Math.round(aoki.cp,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga lateral ${Math.round(aoki.cl,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`capacidade de carga ${Math.round(aoki.pr,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga admissivel ${Math.round(aoki.pAdm,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga admissivel corrigida ${Math.round(aoki.pAdmCorrigida,2)} kN`}\n                      />\n                    </ListItem>\n                  </List>\n                : <Typography variant='body1'>Escolha uma estaca na etapa 4</Typography>\n              }\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                8: Comparativo\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div className={classes.comparativo}>\n                {comparativo && (\n                  <ResponsiveContainer width='99%' height=\"90%\">\n                    <BarChart data={comparativo}>\n                      <XAxis />\n                      <YAxis />\n                      <Tooltip formatter={(value, name, props) => {\n                          return (`${Math.round(value * 100) / 100} m`)\n                        }}\n                        labelFormatter={(index) => {\n                          return comparativo ? comparativo[index].id : index\n                        }}\n                      />\n                      <Legend />\n                      <Bar dataKey=\"profundidade\" fill=\"#8884d8\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                )}\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}