{"version":3,"sources":["utils/tiposDeFundacoes.js","utils/aokiVelloso.js","App.js","index.js"],"names":["nome","quadrada","f1","f2","variacoes","secao","carga","d","a","comprimento","tabelaKAlpha","k","alpha","useStyles","makeStyles","theme","root","margin","spacing","display","flexDirection","title","marginBottom","formControl","width","geometrico","comparativo","height","marginLeft","tableRoot","overflowX","table","minWidth","arranjo","justifyContent","subArranjo","position","select","etapa","listaEstacas","maxWidth","backgroundColor","palette","background","default","falha","nested","paddingLeft","alignItems","soloParams","profundidade","slider","max","last","arranjos","felds","m","n","coords","useStyles1","left","props","lateral","right","top","borderRadius","Secao","classes","className","Fileira","hex","map","index","key","converseLabarre","s","Math","atan","PI","soloInicial","nspt","h","inicio","cargaPonta","areaPonta","cargaLatetal","solo","estaca","hEstaca","u","l","filter","t","reduce","acc","v","i","camadaPonta","comparacao","length","push","round","makeDs","cargaNominal","nEstacas","cargaAplicadaCadaEstaca","tiposDeFundacoes","tipo","some","variante","eficiencia","metodoEfeitoGrupo","pow","res","pAdmCorrigida","ultimaCamada","cP","cL","pr","pAdm","cp","cl","id","pAp","App","React","useState","setCargaNominal","setArranjo","setCargaAplicadaCadaEstaca","estacas","setEstacas","checked","setChecked","profundidadeEstaca","setProfundidadeEstaca","aoki","setAoki","setComparativo","useEffect","c","sort","b","tipos","Fragment","CssBaseline","Container","Typography","variant","gutterBottom","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","FormControl","clsx","Input","value","onChange","event","Number","target","alert","endAdornment","InputAdornment","FormHelperText","NativeSelect","e","toFixed","List","subheader","ListSubheader","estIndex","ListItem","button","ListItemText","primary","secondary","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","disabled","Slider","valueLabelDisplay","getAriaValueText","defaultValue","step","min","onChangeCommitted","data","formatter","name","labelFormatter","dataKey","fill","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a321373.chunk.js","sourcesContent":["// f1 e f2 de acordo com\n// http://www.ufjf.br/nugeo/files/2009/11/GF06-CapCargaProf-por-meio-SPT-2009.pdf\n// pag 4\n\nexport default [\n  {\n    nome: 'Fuste quadrada',\n    quadrada: true,\n    f1: 1.75,\n    f2: 3.50,\n    variacoes: [\n      {\n        secao: 0.15,\n        carga: 150,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [3, 8],\n      },\n      {\n        secao: 0.20,\n        carga: 200,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.25,\n        carga: 300,\n        d: 0.65,\n        a: 0.35,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.30,\n        carga: 400,\n        d: 0.75,\n        a: 0.40,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.35,\n        carga: 500,\n        d: 0.90,\n        a: 0.40,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.40,\n        carga: 700,\n        d: 1.00,\n        a: 0.50,\n        comprimento: [3, 12],\n      },\n    ]\n  },\n  {\n    nome: 'Fuste circular',\n    f1: 1.75,\n    f2: 3.50,\n    variacoes: [\n      {\n        secao: 0.20,\n        carga: 200,\n        d: 0.60,\n        a: 0.30,\n        comprimento: [4, 10],\n      },\n      {\n        secao: 0.25,\n        carga: 300,\n        d: 0.65,\n        a: 0.30,\n        comprimento: [4, 14],\n      },\n      {\n        secao: 0.30,\n        carga: 400,\n        d: 0.75,\n        a: 0.35,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.35,\n        carga: 550,\n        d: 0.90,\n        a: 0.40,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.40,\n        carga: 700,\n        d: 1.00,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.50,\n        carga: 1000,\n        d: 1.30,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n      {\n        secao: 0.60,\n        carga: 1500,\n        d: 1.50,\n        a: 0.50,\n        comprimento: [4, 16],\n      },\n    ]\n  },\n  {\n    nome: 'Strauss',\n    f1: 4.2,\n    f2: 3.8,\n    variacoes: [\n      {\n        secao: 0.25,\n        carga: 200,\n        d: 0.75,\n        a: 0.20,\n        comprimento: [3, 12],\n      },\n      {\n        secao: 0.32,\n        carga: 300,\n        d: 1.00,\n        a: 0.20,\n        comprimento: [3, 15],\n      },\n      {\n        secao: 0.38,\n        carga: 450,\n        d: 1.20,\n        a: 0.25,\n        comprimento: [3, 20],\n      },\n      {\n        secao: 0.45,\n        carga: 600,\n        d: 1.35,\n        a: 0.30,\n        comprimento: [3, 20],\n      },\n      {\n        secao: 0.55,\n        carga: 800,\n        d: 1.65,\n        a: 0.35,\n        comprimento: [3, 20],\n      },\n    ]\n  },\n  // {\n  //   nome: 'Franki',\n  //   f1: 2.5,\n  //   f2: 5.0,\n  //   variacoes: [\n  //     {\n  //       secao: 0.35,\n  //       carga: 550,\n  //       d: 1.20,\n  //       a: 0.70,\n  //       comprimento: [3, 16],\n  //     },\n  //     {\n  //       secao: 0.40,\n  //       carga: 750,\n  //       d: 1.30,\n  //       a: 0.70,\n  //       comprimento: [3, 22],\n  //     },\n  //     {\n  //       secao: 0.52,\n  //       carga: 1300,\n  //       d: 1.50,\n  //       a: 0.80,\n  //       comprimento: undefined,\n  //     },\n  //     {\n  //       secao: 0.60,\n  //       carga: 1700,\n  //       d: 1.70,\n  //       a: 0.80,\n  //       comprimento: undefined,\n  //     },\n  //   ]\n  // },\n]\n","//\n// const resistenciaPonta = (k, n) => k * n;\n// const resistenciaLateral = (a, rp) => a * rp;\n// const resistenciaPontaEfetivo = (rp, f1) => rp / f1;\n// const resistenciaLateralEfetivo = (rl, f2) => rl / f2;\n//\n// const capacidadeCarga = (\n//   areaPonta,\n//   resistenciaPontaEfetivo,\n//   areaLateral,\n//   resistenciaLateralEfetivo\n// ) => (\n//   areaPonta * resistenciaPontaEfetivo +\n//   areaLateral * resistenciaLateralEfetivo\n// )\n//\n// export const aokiVeloso = () => {}\n\nexport const tabelaKAlpha = [\n  {\n    nome: 'Areia',\n    k: [10, 6],\n    alpha: [1.4,1.4],\n  },\n  {\n    nome: 'Areia siltosa',\n    k: [8, 5.3],\n    alpha: [2, 1.9],\n  },\n  {\n    nome: 'Areia silto argilosa',\n    k: [7, 5.3],\n    alpha: [2.4, 2.4],\n  },\n  {\n    nome: 'Areia argilosa',\n    k: [6, 5.3],\n    alpha: [3,3],\n  },\n  {\n    nome: 'Areias argilo-siltosa',\n    k: [5, 5.3],\n    alpha: [2.8],\n  },\n  {\n    nome: 'Argila',\n    k: [2, 2.5],\n    alpha: [6,6],\n  },\n  {\n    nome: 'Argila arenosa',\n    k: [3.5, 4.8],\n    alpha: [2.4, 4],\n  },\n  {\n    nome: 'Argila areno-siltosa',\n    k: [3,3],\n    alpha: [2.8, 4.5],\n  },\n  {\n    nome: 'Argila siltosa',\n    k: [2.2, 2.5],\n    alpha: [4, 5.5],\n  },\n  {\n    nome: 'Argila silto-arenosa',\n    k: [3.3, 3],\n    alpha: [3, 5],\n  },\n]\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slider from '@material-ui/core/Slider';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { BarChart, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from 'recharts';\n\nimport tiposDeFundacoes from './utils/tiposDeFundacoes';\nimport { tabelaKAlpha } from './utils/aokiVelloso';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4, 0, 4, 0),\n    // padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  title: {\n    marginBottom: theme.spacing(5)\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    width: 200,\n  },\n  geometrico: {\n    flexDirection: 'column'\n  },\n  comparativo: {\n    height: 400,\n    width: '100%',\n    '& $div.recharts-responsive-container': {\n      marginLeft: -25\n    }\n  },\n  tableRoot: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 550,\n  },\n  arranjo: {\n    margin: theme.spacing(2, 0, 0, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  subArranjo: {\n    // display: 'flex',\n    position: 'relative',\n    height: 100,\n    width: '100%'\n  },\n  select: {\n    display: 'flex'\n  },\n  etapa: {\n    margin: theme.spacing(6, 0, 1, 0),\n  },\n  listaEstacas: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.default\n  },\n  falha: {\n    backgroundColor: '#ed4b82'\n  },\n  nested: {\n    paddingLeft: theme.spacing(6),\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  soloParams: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  profundidade: {\n    flexDirection: 'column'\n  },\n  slider: {\n    maxWidth: 240,\n    margin: theme.spacing(4,0,4,0)\n  },\n  max: {\n    margin: theme.spacing(0,0,4,0)\n  },\n  last: {\n    flexDirection: 'column'\n  }\n}));\n\nconst arranjos = [\n  {\n    //   x       x\n    // x   x   x   x\n    // x   x   x   x\n    //   x       x\n    nome: \"Dupla de hexagonal\",\n    felds: 0.5832,\n    m: 6,\n    n: 2,\n    coords: [\n         [1.5,1],      [3.5,1],\n      [1,2],[2,2],[3,2],[4,2],\n      [1,3],[2,3],[3,3],[4,3],\n         [1.5,4],      [3.5,4],\n    ]\n  },\n  {\n    // x   x   x   x\n    // x   x   x   x\n    // x   x   x   x\n    nome: \"Dupla de seis\",\n    m: 3,\n    n: 4,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n      [1,2],[2,2],[3,2],[4,2],\n      [1,3],[2,3],[3,3],[4,3],\n    ]\n  },\n  {\n    // x   x   x   x\n    // x   x   x   x\n    nome: \"Duplo de quatro\",\n    m: 2,\n    n: 4,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n      [1,2],[2,2],[3,2],[4,2],\n    ]\n  },\n  {\n    // x   x   x   x\n    //   x       x\n    // x   x   x   x\n    // 12 * 4 + 10 * 4 + 9 * 2\n    nome: \"Dupla de cinco\",\n    felds: 0.6625,\n    m: 2,\n    n: 5,\n    coords: [\n      [1,1],[2,1],[3,1],[4,1],\n        [1.5,2],    [3.5,2],\n      [1,3],[2,3],[3,3],[4,3],\n    ]\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  secao: {\n    position: 'absolute',\n    left: props => theme.spacing(props.lateral),\n    right: props => theme.spacing(props.lateral),\n    top: props => theme.spacing(props.top - 1),\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    borderRadius: 100,\n    backgroundColor: 'black',\n  },\n}))\n\nconst Secao = (props) => {\n  const classes = useStyles1(props);\n  return (\n    <div className={classes.secao} />\n  )\n}\n\nconst Fileira = ({hex, arranjo}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.subArranjo}>\n      {arranjo.map((a,index) => (\n        <Secao key={index} top={a[1] * 3} lateral={a[0] * 3}/>\n      ))}\n    </div>\n  )\n};\n\nconst converseLabarre = (d, s, m, n) => (\n  1 - Math.atan(d / s) * 180 / Math.PI * ((n - 1) * m + (m - 1) * n) /\n  (90 * m * n)\n);\n\nconst soloInicial = [\n  {\n    nome: \"Argila siltosa\",\n    nspt: 3,\n    h: 4,\n    inicio: 0,\n    profundidade: 4,\n    k: 0.25,\n    alpha: 5.5\n  },\n  {\n    nome: \"Argila arenosa\",\n    nspt: 8,\n    h: 3,\n    inicio: 4,\n    profundidade: 7,\n    k: 0.48,\n    alpha: 4\n  },\n  {\n    nome: \"Areia argilosa\",\n    nspt: 14,\n    h: 4,\n    inicio: 7,\n    profundidade: 11,\n    k: 0.53,\n    alpha: 3\n  },\n  {\n    nome: \"Areia siltosa\",\n    nspt: 24,\n    h: 5,\n    inicio: 11,\n    profundidade: 16,\n    k: 0.53,\n    alpha: 1.9\n  },\n  {\n    nome: \"Areia siltosa\",\n    nspt: 33,\n    h: 5,\n    inicio: 16,\n    profundidade: 20.05,\n    k: 0.8,\n    alpha: 2\n  },\n]\n\nconst cargaPonta = (areaPonta, k, f1, nspt) => areaPonta * k * nspt / f1;\nconst cargaLatetal = (solo, estaca, hEstaca, f2, quadrada) => {\n  const tabela = solo.map(s => ({\n    ...s,\n    u: quadrada ? estaca.secao * 4 : Math.PI * estaca.secao,\n    l: s.profundidade > hEstaca ? hEstaca - s.inicio : s.h\n  })).filter(t => t.inicio <= hEstaca)\n  const cargaLateral = tabela.reduce((acc, v, i) => {\n    const sum = typeof acc === 'number' ? acc : 0;\n    const carga = sum + v.u * v.l * v.k * v.nspt * v.alpha / (f2 * 100)\n    return carga\n  }, 0);\n  return cargaLateral\n}\nconst camadaPonta = (h, solo) => solo.filter(s => s.inicio <= h && s.profundidade > h);\n\n// function valueLabelFormat(value) {\n//   return marks.findIndex(mark => mark.value === value) + 1;\n// }\nconst makeDs = () => {\n  let a = [4];\n  while (a.length < 160) {\n    a.push(Math.round((a[a.length - 1] + 0.1) * 10) / 10)\n  }\n  return a\n}\n\nconst ds = makeDs();\n\nconst comparacao = (cargaNominal) => {\n  let comparacao = [];\n  arranjos.map(arranjo => {\n    const nEstacas = arranjo.m * arranjo.n;\n    const cargaAplicadaCadaEstaca = cargaNominal * 1.10 / nEstacas;\n    const tipos = tiposDeFundacoes.filter(tipo => (\n      tipo.variacoes.some(v => v.carga >= cargaAplicadaCadaEstaca)\n    )).map(tipo => ({\n      ...tipo,\n      variacoes: tipo.variacoes.filter(variante => (\n        variante.carga >= cargaAplicadaCadaEstaca\n      )).map(v => {\n        const e = !arranjo.felds ? {\n          eficiencia: converseLabarre(\n            v.secao,\n            v.d,\n            arranjo.m,\n            arranjo.n\n          ),\n          metodoEfeitoGrupo: 'labarre'\n        } : {\n          eficiencia: arranjo.felds,\n          metodoEfeitoGrupo: 'felds'\n        }\n        return {\n          ...v,\n          ...e\n        }\n      })\n    }))\n\n    tipos.map(tipo => {\n\n      tipo.variacoes.map(v => {\n        const areaPonta = tipo.nome === 'Franki'\n        ? 0.38\n        : tipo.quadrada\n          ? Math.pow(v.secao / 2, 2)\n          : Math.pow(v.secao / 2, 2) * 3.14592654;\n\n        let distancia = 24;\n        let bounds = [4, 20]\n        let res = {pAdmCorrigida: 0};\n        // let h;\n\n        for (var h = 4.00; h < 20.1; h+=0.10) {\n          const ultimaCamada = camadaPonta(h, soloInicial)[0];\n          const cP = cargaPonta(areaPonta, ultimaCamada.k, tipo.f1, ultimaCamada.nspt);\n          const cL = cargaLatetal(soloInicial, v, h, tipo.f2, tipo.quadrada);\n          const pr = cP + cL;\n          const pAdm = pr / 2 * 1000\n          const pAdmCorrigida = pAdm * v.eficiencia\n          res = {\n            cp: cP * 1000,\n            cl: cL * 1000,\n            pr: pr * 1000,\n            pAdm,\n            pAdmCorrigida\n          }\n\n          if (res.pAdmCorrigida >= cargaAplicadaCadaEstaca) {\n            comparacao.push({\n              id: `${arranjo.nome} - ${tipo.nome} - ${v.secao}`,\n              profundidade: h,\n              nome: tipo.nome,\n              secao: v.secao,\n              arranjo: arranjo.nome,\n              pAp: cargaAplicadaCadaEstaca,\n              ...res,\n            })\n            break\n          }\n        }\n\n        // while (\n        //   // res.pAdmCorrigida < cargaAplicadaCadaEstaca &&\n        //   distancia > 0.01\n        // ) {\n        //   h = (bounds[0] + bounds[1]) / 2 ;\n        //\n        //   const ultimaCamada = camadaPonta(h, soloInicial)[0];\n        //   // if (tipo.nome === 'Fuste circular' && v.secao === 0.5){\n        //   //   console.log(h, ultimaCamada.nspt);\n        //   // }\n        //   const cP = cargaPonta(areaPonta, ultimaCamada.k, tipo.f1, ultimaCamada.nspt);\n        //   const cL = cargaLatetal(soloInicial, v, h, tipo.f2, tipo.quadrada);\n        //   const pr = cP + cL;\n        //   const pAdm = pr / 2 * 1000\n        //   const pAdmCorrigida = pAdm * v.eficiencia\n        //   res = {\n        //     cp: cP * 1000,\n        //     cl: cL * 1000,\n        //     pr: pr * 1000,\n        //     pAdm,\n        //     pAdmCorrigida\n        //   }\n        //\n        //   if (res.pAdmCorrigida >= cargaAplicadaCadaEstaca) {\n        //     bounds[1] = h;\n        //   }\n        //   else {\n        //     bounds[0] = h;\n        //   }\n        //   distancia = bounds[1] - bounds[0];\n        // }\n\n        // comparacao.push({\n        //   id: `${arranjo.nome} - ${tipo.nome} - ${v.secao}`,\n        //   profundidade: h,\n        //   nome: tipo.nome,\n        //   secao: v.secao,\n        //   arranjo: arranjo.nome,\n        //   pAp: cargaAplicadaCadaEstaca,\n        //   ...res,\n        // })\n      })\n\n    })\n\n  })\n  return comparacao;\n};\n\nfunction App() {\n\n  const classes = useStyles();\n  const [cargaNominal, setCargaNominal] = React.useState((2500 + 155) * 2);\n  const [arranjo, setArranjo] = React.useState(0)\n  const [cargaAplicadaCadaEstaca, setCargaAplicadaCadaEstaca] = React.useState(null);\n  const [estacas, setEstacas] = React.useState(null);\n  const [checked, setChecked] = React.useState(null);\n  const [solo, setSolo] = React.useState(soloInicial);\n  const [profundidadeEstaca, setProfundidadeEstaca] = React.useState(10);\n  const [aoki, setAoki] = React.useState(null);\n  const [comparativo, setComparativo] = React.useState(null);\n\n  const handleChange = event => {\n    const value = Number(event.target.value);\n    if (value >= 0) {\n      setCargaNominal(value);\n    }\n    else alert('Apenas numero!')\n  };\n\n  React.useEffect(() => {\n    const d = arranjos[arranjo].m * arranjos[arranjo].n;\n    setCargaAplicadaCadaEstaca(cargaNominal * (1.1) / d );\n    setChecked(null);\n  }, [cargaNominal, arranjo]);\n\n  React.useEffect(() => {\n    const c = comparacao(cargaNominal)\n    setComparativo(\n      c.sort(function (a, b) {\n        if (a.profundidade > b.profundidade) {\n          return 1;\n        }\n        if (a.profundidade < b.profundidade) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      })\n    );\n  }, [cargaNominal]);\n\n  React.useEffect(() => {\n    const tipos = tiposDeFundacoes.filter(tipo => (\n      tipo.variacoes.some(v => v.carga >= cargaAplicadaCadaEstaca)\n    )).map(tipo => ({\n      ...tipo,\n      variacoes: tipo.variacoes.filter(variante => (\n        variante.carga >= cargaAplicadaCadaEstaca\n      )).map(v => {\n        const e = !arranjos[arranjo].felds ? {\n          eficiencia: converseLabarre(\n            v.secao,\n            v.d,\n            arranjos[arranjo].m,\n            arranjos[arranjo].n\n          )\n        } : {}\n        return {\n          ...v,\n          ...e\n        }\n      })\n    }))\n    setEstacas(tipos);\n    setChecked(null);\n  }, [cargaAplicadaCadaEstaca, arranjo]);\n\n  const handleChecked = (estacaIndex, secaoIndex) => {\n    setChecked([estacaIndex, secaoIndex])\n  }\n\n  React.useEffect(() => {\n    if (checked) {\n      const areaPonta = estacas[checked[0]].nome === 'Franki'\n      ? 0.38\n      : estacas[checked[0]].quadrada\n        ? Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2)\n        : Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2) * 3.14592654\n      const ultimaCamada = camadaPonta(profundidadeEstaca, solo)[0];\n      const cP = cargaPonta(areaPonta, ultimaCamada.k, estacas[checked[0]].f1, ultimaCamada.nspt);\n      const cL = cargaLatetal(solo, estacas[checked[0]].variacoes[checked[1]], profundidadeEstaca, estacas[checked[0]].f2, estacas[checked[0]].quadrada);\n      const pr = cP + cL;\n      const pAdm = pr / 2 * 1000\n      const pAdmCorrigida = arranjos[arranjo].felds\n      ? pAdm * arranjos[arranjo].felds\n      : estacas[checked[0]].variacoes[checked[1]].eficiencia * pAdm;\n      setAoki({\n        cp: cP * 1000,\n        cl: cL * 1000,\n        pr: pr * 1000,\n        pAdm,\n        pAdmCorrigida\n      })\n    }\n  }, [checked, solo, profundidadeEstaca])\n\n  const onChangeCommitted = (event, value) => {\n    setProfundidadeEstaca(value);\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <div className={classes.root}>\n          <Typography variant='h4' gutterBottom className={classes.title}>\n            Projeto 2 de fundações\n          </Typography>\n          {/*<ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                1: Definir numero de pilares.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <Input disabled value={2} />\n                <FormHelperText>Número de pilares</FormHelperText>\n              </FormControl>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>*/}\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                1: Definir a carga.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <Input\n                  value={cargaNominal}\n                  onChange={handleChange}\n                  endAdornment={<InputAdornment position=\"end\">kN</InputAdornment>}\n                />\n                <FormHelperText>Carga total</FormHelperText>\n              </FormControl>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                2: Definir o arranjo geométrico.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.geometrico}>\n              <FormControl className={clsx(classes.margin, classes.formControl)}>\n                <NativeSelect\n                  value={arranjo}\n                  onChange={(e) => setArranjo(Number(e.target.value))}\n                >\n                {arranjos.map((a, i) => (\n                  <option value={i} key={a.nome}>{a.nome}</option>\n                ))}\n                </NativeSelect>\n                <FormHelperText>Arranjo geometrico</FormHelperText>\n              </FormControl>\n              <div className={classes.arranjo}>\n                <Fileira arranjo={arranjos[arranjo].coords}/>\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                3: Calcular a carga aplicada em cada estaca.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography variant='body1'>\n                Carga aplicada em cada estaca:\n                {\n                  cargaAplicadaCadaEstaca\n                  ? ` ${cargaAplicadaCadaEstaca.toFixed(2)} kN`\n                  : ' loading...'\n                }\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                4: Filtrar entre os tipos de estacas, as que suportam a carga\n                aplicada em cada pilar e selecionar a desejada.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div/>\n              {estacas && (\n                <List\n                  className={classes.listaEstacas}\n                  subheader={\n                  <ListSubheader>\n                    Estacas aceitaveis\n                    {arranjos[arranjo].felds ? ` - Eficiência (Felds) ${Math.round(arranjos[arranjo].felds * 10000)/100} %` : ''}\n                  </ListSubheader>\n                }>\n                  {estacas.map((estaca, estIndex) => (\n                    <React.Fragment key={estaca.nome}>\n                      <ListItem button key={estaca.nome}>\n                        <ListItemText\n                          primary={estaca.nome}\n                        />\n                        <ListItemText secondary={`F1: ${estaca.f1}`}/ >\n                        <ListItemText secondary={`F2: ${estaca.f2}`}/ >\n                      </ListItem>\n                      {estaca.variacoes.map((v, index) => (\n                        <ListItem\n                          button\n                          key={v.secao}\n                          className={classes.nested}\n                          onClick={() => handleChecked(estIndex, index)}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              edge=\"start\"\n                              checked={checked ? estIndex === checked[0] && index === checked[1] : false}\n                              tabIndex={-1}\n                              disableRipple\n                            />\n                          </ListItemIcon>\n                          <ListItemText primary={`Secao ${v.secao} m`}/>\n                          <ListItemText secondary={`Carga maxima ${v.carga} kN`}/>\n                          <ListItemText secondary={`Distância mínima ${v.d} m`}/>\n                          {v.eficiencia ? <ListItemText secondary={`Eficiência (Labarre) ${Math.round(v.eficiencia * 10000)/100} %`}/> : null}\n                        </ListItem>\n                      ))}\n                    </React.Fragment>\n                  ))}\n                </List>\n              )}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                5: Definir os parametros K e alpha.\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <List\n                className={classes.listaEstacas}\n                subheader={\n                <ListSubheader>\n                  Parametros do solo\n                </ListSubheader>\n              }>\n                {solo.map((s, i) => (\n                  <React.Fragment key={i}>\n                    <ListItem\n                      button\n                      key={i}\n                    >\n                      <ListItemText\n                        primary={`Camada ${i + 1}`}\n                      />\n                    </ListItem>\n                    <ListItem className={classes.nested}>\n                      <NativeSelect\n                        value={s.nome}\n                        // onChange={(e) => setArranjo(Number(e.target.value))}\n                      >\n                      {tabelaKAlpha.map((a, i) => (\n                        <option disabled value={a.nome} key={i}>{a.nome}</option>\n                      ))}\n                      </NativeSelect>\n                      <ListItemText\n                        secondary={`nspt = ${s.nspt}`}\n                      />\n                      <ListItemText\n                        secondary={`h = ${s.h} m`}\n                      />\n                      <ListItemText\n                        secondary={`k = ${s.k} MPa`}\n                      />\n                      <ListItemText\n                        secondary={`alpha = ${s.alpha} %`}\n                      />\n                    </ListItem>\n                  </React.Fragment>\n                ))}\n              </List>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                6: Definir a área da ponta\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography variant='body1'>\n                {\n                  !checked\n                  ? <span>Escolha uma estaca na estapa 4</span>\n                  : estacas[checked[0]].nome === 'Franki'\n                    ? <span>0.38 m² (bulbo de 180 l)</span>\n                    : estacas[checked[0]].quadrada\n                      ? `${Math.round(Math.pow(estacas[checked[0]].variacoes[checked[1]].secao, 2) * 10000) / 10000} m²`\n                      : `${Math.round(Math.pow(estacas[checked[0]].variacoes[checked[1]].secao / 2, 2) * 3.14592654 * 10000) / 10000} m²`\n                }\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                7: Definir a profundidade\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.profundidade}>\n              <Slider\n                valueLabelDisplay=\"on\"\n                getAriaValueText={\n                  function valuetext(value) {\n                    return `${value} m`;\n                  }}\n                className={classes.slider}\n                defaultValue={profundidadeEstaca}\n                step={0.1}\n                min={4}\n                max={20}\n                onChangeCommitted={onChangeCommitted}\n              />\n              { aoki && (\n                <Typography variant='body1' className={classes.max}>\n                  Carga máxima suportada por cada estaca: {Math.round(cargaAplicadaCadaEstaca, 2)} kN\n                </Typography>\n              )}\n              {\n                aoki ?\n                  <List\n                    className={\n                      clsx(classes.listaEstacas, {\n                        [classes.falha]: cargaAplicadaCadaEstaca > aoki.pAdmCorrigida\n                      })}\n                    subheader={\n                    <ListSubheader>\n                      Resultados\n                    </ListSubheader>\n                  }>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga na ponta ${Math.round(aoki.cp,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga lateral ${Math.round(aoki.cl,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`capacidade de carga ${Math.round(aoki.pr,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga admissivel ${Math.round(aoki.pAdm,2)} kN`}\n                      />\n                    </ListItem>\n                    <ListItem button>\n                      <ListItemText\n                        primary={`carga admissivel corrigida ${Math.round(aoki.pAdmCorrigida,2)} kN`}\n                      />\n                    </ListItem>\n                  </List>\n                : <Typography variant='body1'>Escolha uma estaca na etapa 4</Typography>\n              }\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography variant='subtitle1'>\n                8: Comparativo\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.last}>\n              <div className={classes.comparativo}>\n                {comparativo && comparativo.length > 0 ? (\n                  <ResponsiveContainer width='99%' height=\"90%\">\n                    <BarChart data={comparativo}>\n                      <XAxis />\n                      <YAxis />\n                      <Tooltip formatter={(value, name, props) => {\n                          return (`${Math.round(value * 100) / 100} m`)\n                        }}\n                        labelFormatter={(index) => {\n                          return comparativo ? comparativo[index].id : index\n                        }}\n                      />\n                      <Legend />\n                      <Bar dataKey=\"profundidade\" fill=\"#8884d8\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                )\n                :\n                <Typography variant='body1'>Nenhum dado disponivel</Typography>\n              }\n              </div>\n              {comparativo && comparativo.length > 0 && (\n                <div className={classes.tableRoot}>\n                  <Table className={classes.table} size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Estaca</TableCell>\n                        <TableCell align=\"right\">Secao (m)</TableCell>\n                        <TableCell align=\"right\">Arranjo</TableCell>\n                        <TableCell align=\"right\">h (m)</TableCell>\n                        <TableCell align=\"right\">Papl (kN)</TableCell>\n                        <TableCell align=\"right\">Ponta (kN)</TableCell>\n                        <TableCell align=\"right\">Lateral (kN)</TableCell>\n                        <TableCell align=\"right\">PR (kN)</TableCell>\n                        <TableCell align=\"right\">Padm (kN)</TableCell>\n                        <TableCell align=\"right\">Padmc (kN)</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {comparativo.map(row => (\n                        <TableRow key={row.id}>\n                          <TableCell component=\"th\" scope=\"row\">{row.nome}</TableCell>\n                          <TableCell align=\"right\">{row.secao}</TableCell>\n                          <TableCell align=\"right\">{row.arranjo}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.profundidade* 100) / 100}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.pAp * 100) / 100}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.cp * 100) / 100}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.cl * 100) / 100}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.pr * 100) / 100}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.pAdm * 100) / 100}</TableCell>\n                          <TableCell align=\"right\">{Math.round(row.pAdmCorrigida * 100) / 100}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n\n\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}